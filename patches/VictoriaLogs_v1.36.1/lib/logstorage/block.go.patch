diff --git a/lib/logstorage/block.go b/lib/logstorage/block.go
index a0f002992..0a581317d 100644
--- a/lib/logstorage/block.go
+++ b/lib/logstorage/block.go
@@ -6,6 +6,7 @@ import (
 	"sync"
 	"time"
 
+	vlencoding "github.com/VictoriaMetrics/VictoriaLogs/lib/encoding"
 	"github.com/VictoriaMetrics/VictoriaMetrics/lib/encoding"
 	"github.com/VictoriaMetrics/VictoriaMetrics/lib/logger"
 	"github.com/VictoriaMetrics/VictoriaMetrics/lib/slicesutil"
@@ -177,10 +178,12 @@ func (c *column) mustWriteTo(ch *columnHeader, sw *streamWriters) {
 func (b *block) assertValid() {
 	// Check that timestamps are in ascending order
 	timestamps := b.timestamps
-	for i := 1; i < len(timestamps); i++ {
-		if timestamps[i-1] > timestamps[i] {
-			logger.Panicf("BUG: log entries must be sorted by timestamp; got the previous entry with bigger timestamp %d than the current entry with timestamp %d",
-				timestamps[i-1], timestamps[i])
+	if !vlencoding.IsInt64ArraySorted(timestamps) {
+		for i := 1; i < len(timestamps); i++ {
+			if timestamps[i-1] > timestamps[i] {
+				logger.Panicf("BUG: log entries must be sorted by timestamp; got the previous entry with bigger timestamp %d than the current entry with timestamp %d",
+					timestamps[i-1], timestamps[i])
+			}
 		}
 	}
 
@@ -341,10 +344,12 @@ func canStoreInConstColumn(rows [][]Field, colIdx int) bool {
 }
 
 func assertTimestampsSorted(timestamps []int64) {
-	for i := range timestamps {
-		if i > 0 && timestamps[i-1] > timestamps[i] {
-			logger.Panicf("BUG: log entries must be sorted by timestamp; got the previous entry with bigger timestamp %d than the current entry with timestamp %d",
-				timestamps[i-1], timestamps[i])
+	if !vlencoding.IsInt64ArraySorted(timestamps) {
+		for i := range timestamps {
+			if i > 0 && timestamps[i-1] > timestamps[i] {
+				logger.Panicf("BUG: log entries must be sorted by timestamp; got the previous entry with bigger timestamp %d than the current entry with timestamp %d",
+					timestamps[i-1], timestamps[i])
+			}
 		}
 	}
 }
